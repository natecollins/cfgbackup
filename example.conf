#######################################
## cfgbackup config: example
#######################################

############################
# BASIC SETTINGS

# Email address to send notifications/errors to
# If left blank, no emails will be sent
NOTIFY_EMAIL=

# Where to backup files from (or mirror); can be local or a SSH location
# SOURCE_DIR=/path/to/files/
# SOURCE_DIR=backups@server.example.com:/path/to/files/
SOURCE_DIR=

# Target where to backup files to (or mirror); must be a local directory
# TARGET_DIR=/path/to/backups/
TARGET_DIR=

# Possible values: rotation,sync,mirror
# BACKUP_TYPE=rotation
BACKUP_TYPE=

# Maximum number of backups to create if BACKUP_TYPE is rotation
# Ignored if BACKUP_TYPE isn't rotation
# - When rotating old backups, the backup that is MAX_ROTATIONS old (by dir name)
#   will be reused for the next backups, even if there are older backups present
MAX_ROTATIONS=8

# Hard link files that have not changed between rotation backups,
# greatly reducing disk usage.
ROTATIONALS_HARD_LINK=0

# Hard link identical files within a single backup, requires command: hardlink
# This is a post-transfer process and can significantly lengthen job
# runtime; all files will initally be copied to target dir and hardlinked after.
# Ignored if JOB_TYPE is mirror
IDENTICALS_HARD_LINK=0

# Rotation only subdirectory name; requires rotation key of: NUM0, NUM1, or DATE
# backup_NUM0 = numeric increment starting with 0
# rotation-NUM1 = numeric increment starting with 1
# backup_DATE = year month day of when backup started
# The NUM keys can be zero padded, such as NUM00 or NUM0001
# Ignored if BACKUP_TYPE isn't rotation
ROTATE_SUBDIR=backup-NUM1

# Name of file where logs should be saved to.
# Allowed variables of CONFNAME, DATE, TIME
LOG_FILENAME=CONFNAME_DATE.log

# Compress logs with gzip
# Only compresses logs older than two days and that match LOG_FILENAME format
# If set to 1, compresses old logs found.
COMPRESS_LOGS=1

# Directory where logs will be saved; default value is /var/log/cfgbackup/
# LOG_DIR=/path/to/logs/
LOG_DIR=

############################
# ADVANCED SETTINGS

# Allow backups to delete files from target directory; default of 1
# - If set to 0, any deleted files will be reported in logs and
#   email, but not removed from target dir
# - If set to 1, this sets the rsync flag: --del
#ALLOW_DELETIONS=1

# Allow files to be overwritten in the target directory; default of 1
# - If set to 0, any changed files will be reported in logs and
#   email, but will not change files in existing target dir
# - If set to 0, this sets the rsync flag: --ignore-existing
#ALLOW_OVERWRITES=1

# Additional flags to add to the rsync job.
# Standard rsync flags always used regardless: -av --stats
#RSYNC_FLAGS=

# Specify full path to local rsync binary
# By default, will look in PATH
#RSYNC_PATH=

# Specify full path to local mail or mailx binary
# By default, will look in PATH
#MAIL_PATH=

# Specify full path to local sort binary
# By default, will look in PATH
#SORT_PATH=

# Specify full path to local hardlink binary
# By default, will look in PATH
#HARDLINK_PATH=

# Specify the full path to the local compression binary
# By default, will look for gzip in the PATH
#COMPRESS_PATH=

# Pre-run script before backup.
# If script returns non 0 on exit, backup job will send an email notification
#PRE_SCRIPT=

# If set to 1, will require the pre-script to have an exit code of 0, otherwise
# the backup job will not be run.
#PRE_SCRIPT_ERROR_EXIT=0

# Post-run script after successful rsync command.
# If script returns non 0 on exit, backup job will send an email notification
#SUCCESS_SCRIPT=

# Post-run script only after failed rsync command.
# If script returns non 0 on exit, backup job will send an email notification
#FAILED_SCRIPT=

# Post-run script after backup, regardless of success or failure of rsync.
# If script returns non 0 on exit, backup job will send an email notification
#FINAL_SCRIPT=

# Rotation only - name of directory used for running or incomplete backups
#RUNNING_DIRNAME=backup-running

# Name of PID file which will be present in the TARGET_DIR while a job is running
#PID_FILE=.cfgbackup.pid

# Prefix of file names to be located in TARGET_DIR, each of which will contain the
# last known state of source and target files
# Mirror jobs will create two files, with appended: .source .target
# Ignored if JOB_TYPE isn't mirror
#MIRROR_PREFIX=.cfgbackup.mirror

